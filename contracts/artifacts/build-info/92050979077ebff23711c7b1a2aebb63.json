{
	"id": "92050979077ebff23711c7b1a2aebb63",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinFlipSolution.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./CoinFlip.sol\";\n\ncontract CoinFlipSolution {\n\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    address coinFlipAddress;\n\n\n\n    constructor() {\n        coinFlipAddress = 0x107EE1cF4ef17F73952451549c82B7d59AbC094c;\n    }\n\n     // this \"exploit\" shows that we can not rely on randomness generated from hashing publicly available info (blocknumber) b/c anyone has access to it and can \"mimic\" that randomness b/c hashing is deterministic\n    function headsOrTails() public returns (bool) {\n        uint256 blockValue = uint256(blockhash(block.number - 1));\n\n        \n        uint256 coinFlip = blockValue / FACTOR;\n        bool side = coinFlip == 1 ? true : false;\n\n        CoinFlip CoinFlipContract = CoinFlip(coinFlipAddress);\n        \n        if (side == true) {\n            return CoinFlipContract.flip(true);\n        } else {\n            return CoinFlipContract.flip(false);\n        }\n    }\n\n}"
			},
			"contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\ncontract CoinFlip {\n\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number - 1));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlip.sol\":62:717  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlip.sol\":156:233  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlip.sol\":139:233  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/CoinFlip.sol\":238:282  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CoinFlip.sol\":276:277  0 */\n  0x00\n    /* \"contracts/CoinFlip.sol\":258:273  consecutiveWins */\n  dup1\n    /* \"contracts/CoinFlip.sol\":258:277  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlip.sol\":62:717  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlip.sol\":62:717  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":286:715  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":85:115  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":286:715  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"contracts/CoinFlip.sol\":329:333  bool */\n      0x00\n        /* \"contracts/CoinFlip.sol\":341:359  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":395:396  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":380:392  block.number */\n      number\n        /* \"contracts/CoinFlip.sol\":380:396  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/CoinFlip.sol\":370:397  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlip.sol\":362:398  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlip.sol\":341:398  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":421:431  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":409:417  lastHash */\n      sload(0x01)\n        /* \"contracts/CoinFlip.sol\":409:431  lastHash == blockValue */\n      eq\n        /* \"contracts/CoinFlip.sol\":405:456  if (lastHash == blockValue) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/CoinFlip.sol\":441:449  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":405:456  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"contracts/CoinFlip.sol\":473:483  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":462:470  lastHash */\n      0x01\n        /* \"contracts/CoinFlip.sol\":462:483  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":489:505  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlip.sol\":521:527  FACTOR */\n      sload(0x02)\n        /* \"contracts/CoinFlip.sol\":508:518  blockValue */\n      dup3\n        /* \"contracts/CoinFlip.sol\":508:527  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/CoinFlip.sol\":489:527  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":533:542  bool side */\n      0x00\n        /* \"contracts/CoinFlip.sol\":557:558  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":545:553  coinFlip */\n      dup3\n        /* \"contracts/CoinFlip.sol\":545:558  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlip.sol\":545:573  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/CoinFlip.sol\":568:573  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":545:573  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/CoinFlip.sol\":561:565  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":545:573  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/CoinFlip.sol\":533:573  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":592:598  _guess */\n      dup5\n        /* \"contracts/CoinFlip.sol\":584:598  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/CoinFlip.sol\":584:588  side */\n      dup2\n        /* \"contracts/CoinFlip.sol\":584:598  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/CoinFlip.sol\":580:711  if (side == _guess) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/CoinFlip.sol\":608:623  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/CoinFlip.sol\":608:625  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":640:644  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":633:644  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/CoinFlip.sol\":580:711  if (side == _guess) {... */\n    tag_23:\n        /* \"contracts/CoinFlip.sol\":683:684  0 */\n      0x00\n        /* \"contracts/CoinFlip.sol\":665:680  consecutiveWins */\n      dup1\n        /* \"contracts/CoinFlip.sol\":665:684  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":699:704  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":692:704  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlip.sol\":286:715  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoinFlip.sol\":85:115  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_7:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":219:338   */\n    tag_33:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_36\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:584   */\n    tag_37:\n        /* \"#utility.yul\":556:577   */\n      tag_39\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":556:577   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":551:554   */\n      dup3\n        /* \"#utility.yul\":544:578   */\n      mstore\n        /* \"#utility.yul\":475:584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:708   */\n    tag_41:\n        /* \"#utility.yul\":677:701   */\n      tag_43\n        /* \"#utility.yul\":695:700   */\n      dup2\n        /* \"#utility.yul\":677:701   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":672:675   */\n      dup3\n        /* \"#utility.yul\":665:702   */\n      mstore\n        /* \"#utility.yul\":590:708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:924   */\n    tag_10:\n        /* \"#utility.yul\":801:805   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":828:837   */\n      dup3\n        /* \"#utility.yul\":824:842   */\n      add\n        /* \"#utility.yul\":816:842   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:917   */\n      tag_46\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:916   */\n      add\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":852:917   */\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":714:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1152   */\n    tag_14:\n        /* \"#utility.yul\":1023:1027   */\n      0x00\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1050:1059   */\n      dup3\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"#utility.yul\":1038:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1145   */\n      tag_48\n        /* \"#utility.yul\":1142:1143   */\n      0x00\n        /* \"#utility.yul\":1131:1140   */\n      dup4\n        /* \"#utility.yul\":1127:1144   */\n      add\n        /* \"#utility.yul\":1118:1124   */\n      dup5\n        /* \"#utility.yul\":1074:1145   */\n      tag_41\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":930:1152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1424   */\n    tag_20:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1296:1316   */\n      tag_52\n        /* \"#utility.yul\":1314:1315   */\n      dup3\n        /* \"#utility.yul\":1296:1316   */\n      tag_44\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1291:1316   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1350   */\n      tag_53\n        /* \"#utility.yul\":1348:1349   */\n      dup4\n        /* \"#utility.yul\":1330:1350   */\n      tag_44\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1325:1350   */\n      swap3\n      pop\n        /* \"#utility.yul\":1369:1370   */\n      dup3\n        /* \"#utility.yul\":1359:1394   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1374:1392   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1359:1394   */\n    tag_54:\n        /* \"#utility.yul\":1416:1417   */\n      dup3\n        /* \"#utility.yul\":1413:1414   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      div\n        /* \"#utility.yul\":1404:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1239:1424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1621   */\n    tag_17:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1490:1510   */\n      tag_58\n        /* \"#utility.yul\":1508:1509   */\n      dup3\n        /* \"#utility.yul\":1490:1510   */\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1485:1510   */\n      swap2\n      pop\n        /* \"#utility.yul\":1524:1544   */\n      tag_59\n        /* \"#utility.yul\":1542:1543   */\n      dup4\n        /* \"#utility.yul\":1524:1544   */\n      tag_44\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1519:1544   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1564   */\n      dup3\n        /* \"#utility.yul\":1560:1561   */\n      dup3\n        /* \"#utility.yul\":1557:1565   */\n      lt\n        /* \"#utility.yul\":1554:1588   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1568:1586   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1554:1588   */\n    tag_60:\n        /* \"#utility.yul\":1613:1614   */\n      dup3\n        /* \"#utility.yul\":1610:1611   */\n      dup3\n        /* \"#utility.yul\":1606:1615   */\n      sub\n        /* \"#utility.yul\":1598:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1430:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1717   */\n    tag_40:\n        /* \"#utility.yul\":1661:1668   */\n      0x00\n        /* \"#utility.yul\":1704:1709   */\n      dup2\n        /* \"#utility.yul\":1697:1710   */\n      iszero\n        /* \"#utility.yul\":1690:1711   */\n      iszero\n        /* \"#utility.yul\":1679:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1627:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1800   */\n    tag_44:\n        /* \"#utility.yul\":1760:1767   */\n      0x00\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1778:1794   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1806:2039   */\n    tag_25:\n        /* \"#utility.yul\":1845:1848   */\n      0x00\n        /* \"#utility.yul\":1868:1892   */\n      tag_66\n        /* \"#utility.yul\":1886:1891   */\n      dup3\n        /* \"#utility.yul\":1868:1892   */\n      tag_44\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1859:1892   */\n      swap2\n      pop\n        /* \"#utility.yul\":1914:1980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1907:1912   */\n      dup3\n        /* \"#utility.yul\":1904:1981   */\n      eq\n        /* \"#utility.yul\":1901:2004   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1984:2002   */\n      tag_68\n      tag_62\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1901:2004   */\n    tag_67:\n        /* \"#utility.yul\":2031:2032   */\n      0x01\n        /* \"#utility.yul\":2024:2029   */\n      dup3\n        /* \"#utility.yul\":2020:2033   */\n      add\n        /* \"#utility.yul\":2013:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":1806:2039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2045:2225   */\n    tag_62:\n        /* \"#utility.yul\":2093:2170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x11\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2231:2411   */\n    tag_56:\n        /* \"#utility.yul\":2279:2356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2276:2277   */\n      0x00\n        /* \"#utility.yul\":2269:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x12\n        /* \"#utility.yul\":2373:2374   */\n      0x04\n        /* \"#utility.yul\":2366:2381   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x24\n        /* \"#utility.yul\":2397:2398   */\n      0x00\n        /* \"#utility.yul\":2390:2405   */\n      revert\n        /* \"#utility.yul\":2540:2657   */\n    tag_35:\n        /* \"#utility.yul\":2649:2650   */\n      0x00\n        /* \"#utility.yul\":2646:2647   */\n      dup1\n        /* \"#utility.yul\":2639:2651   */\n      revert\n        /* \"#utility.yul\":2663:2779   */\n    tag_31:\n        /* \"#utility.yul\":2733:2754   */\n      tag_75\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2733:2754   */\n      tag_40\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2723:2755   */\n      eq\n        /* \"#utility.yul\":2713:2773   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":2713:2773   */\n    tag_76:\n        /* \"#utility.yul\":2663:2779   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cba0bafbd96864aec66c4c652f8e2b953b586e2d0385669d9a3d298c9c90b68b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103308061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea2646970667358221220cba0bafbd96864aec66c4c652f8e2b953b586e2d0385669d9a3d298c9c90b68b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x330 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB LOG0 0xBA 0xFB 0xD9 PUSH9 0x64AEC66C4C652F8E2B SWAP6 EXTCODESIZE PC PUSH15 0x2D0385669D9A3D298C9C90B68B6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "62:655:0:-:0;;;156:77;139:94;;238:44;;;;;;;;;;276:1;258:15;:19;;;;62:655;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": 288,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 137,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:2",
														"type": ""
													}
												],
												"src": "7:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:2"
															},
															"nodeType": "YulIf",
															"src": "219:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:2",
														"type": ""
													}
												],
												"src": "146:323:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "551:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "571:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "556:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "522:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "529:3:2",
														"type": ""
													}
												],
												"src": "475:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "672:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "695:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "677:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "650:3:2",
														"type": ""
													}
												],
												"src": "590:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "828:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "903:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "852:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "801:4:2",
														"type": ""
													}
												],
												"src": "714:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1131:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1074:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1012:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1023:4:2",
														"type": ""
													}
												],
												"src": "930:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1191:6:2",
														"type": ""
													}
												],
												"src": "1158:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1314:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1296:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1291:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1330:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1325:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1374:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1374:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1374:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1369:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:9:2"
															},
															"nodeType": "YulIf",
															"src": "1359:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1404:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1416:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1404:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1270:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1273:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1279:1:2",
														"type": ""
													}
												],
												"src": "1239:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1490:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1485:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1542:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1524:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1519:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1568:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1560:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1563:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:8:2"
															},
															"nodeType": "YulIf",
															"src": "1554:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1610:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1613:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1461:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1464:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1470:4:2",
														"type": ""
													}
												],
												"src": "1430:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1704:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1697:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1679:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1651:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1661:7:2",
														"type": ""
													}
												],
												"src": "1627:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1789:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1778:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1750:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1760:7:2",
														"type": ""
													}
												],
												"src": "1723:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:190:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1886:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1868:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1859:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1982:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1984:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1907:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:77:2"
															},
															"nodeType": "YulIf",
															"src": "1901:103:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2013:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2024:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2013:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1845:3:2",
														"type": ""
													}
												],
												"src": "1806:233:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2045:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2231:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2523:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2516:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2417:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2540:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2748:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2733:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:40:2"
															},
															"nodeType": "YulIf",
															"src": "2713:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:2",
														"type": ""
													}
												],
												"src": "2663:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610186565b60405180910390f35b610073610120565b60405161008091906101a1565b60405180910390f35b60008060014361009991906101ed565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101bc565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610237565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102e3565b92915050565b600060208284031215610151576101506102de565b5b600061015f84828501610126565b91505092915050565b61017181610221565b82525050565b6101808161022d565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006020820190506101b66000830184610177565b92915050565b60006101c78261022d565b91506101d28361022d565b9250826101e2576101e16102af565b5b828204905092915050565b60006101f88261022d565b91506102038361022d565b92508282101561021657610215610280565b5b828203905092915050565b60008115159050919050565b6000819050919050565b60006102428261022d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561027557610274610280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6102ec81610221565b81146102f757600080fd5b5056fea2646970667358221220cba0bafbd96864aec66c4c652f8e2b953b586e2d0385669d9a3d298c9c90b68b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x237 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x2DE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x221 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E2 JUMPI PUSH2 0x1E1 PUSH2 0x2AF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH2 0x203 DUP4 PUSH2 0x22D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x280 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x221 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB LOG0 0xBA 0xFB 0xD9 PUSH9 0x64AEC66C4C652F8E2B SWAP6 EXTCODESIZE PC PUSH15 0x2D0385669D9A3D298C9C90B68B6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "62:655:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;85:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:429;329:4;341:18;395:1;380:12;:16;;;;:::i;:::-;370:27;362:36;;341:57;;421:10;409:8;;:22;405:51;;;441:8;;;405:51;473:10;462:8;:21;;;;489:16;521:6;;508:10;:19;;;;:::i;:::-;489:38;;533:9;557:1;545:8;:13;:28;;568:5;545:28;;;561:4;545:28;533:40;;592:6;584:14;;:4;:14;;;580:131;;;608:15;;:17;;;;;;;;;:::i;:::-;;;;;;640:4;633:11;;;;;;;580:131;683:1;665:15;:19;;;;699:5;692:12;;;;;286:429;;;;:::o;85:30::-;;;;:::o;7:133:2:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:109::-;556:21;571:5;556:21;:::i;:::-;551:3;544:34;475:109;;:::o;590:118::-;677:24;695:5;677:24;:::i;:::-;672:3;665:37;590:118;;:::o;714:210::-;801:4;839:2;828:9;824:18;816:26;;852:65;914:1;903:9;899:17;890:6;852:65;:::i;:::-;714:210;;;;:::o;930:222::-;1023:4;1061:2;1050:9;1046:18;1038:26;;1074:71;1142:1;1131:9;1127:17;1118:6;1074:71;:::i;:::-;930:222;;;;:::o;1239:185::-;1279:1;1296:20;1314:1;1296:20;:::i;:::-;1291:25;;1330:20;1348:1;1330:20;:::i;:::-;1325:25;;1369:1;1359:35;;1374:18;;:::i;:::-;1359:35;1416:1;1413;1409:9;1404:14;;1239:185;;;;:::o;1430:191::-;1470:4;1490:20;1508:1;1490:20;:::i;:::-;1485:25;;1524:20;1542:1;1524:20;:::i;:::-;1519:25;;1563:1;1560;1557:8;1554:34;;;1568:18;;:::i;:::-;1554:34;1613:1;1610;1606:9;1598:17;;1430:191;;;;:::o;1627:90::-;1661:7;1704:5;1697:13;1690:21;1679:32;;1627:90;;;:::o;1723:77::-;1760:7;1789:5;1778:16;;1723:77;;;:::o;1806:233::-;1845:3;1868:24;1886:5;1868:24;:::i;:::-;1859:33;;1914:66;1907:5;1904:77;1901:103;;;1984:18;;:::i;:::-;1901:103;2031:1;2024:5;2020:13;2013:20;;1806:233;;;:::o;2045:180::-;2093:77;2090:1;2083:88;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2231:180;2279:77;2276:1;2269:88;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2540:117;2649:1;2646;2639:12;2663:116;2733:21;2748:5;2733:21;:::i;:::-;2726:5;2723:32;2713:60;;2769:1;2766;2759:12;2713:60;2663:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163200",
								"executionCost": "27328",
								"totalCost": "190528"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 139,
									"end": 233,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 282,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 238,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 276,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 273,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 258,
									"end": 277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 258,
									"end": 277,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 258,
									"end": 277,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 258,
									"end": 277,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 717,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cba0bafbd96864aec66c4c652f8e2b953b586e2d0385669d9a3d298c9c90b68b64736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 392,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 380,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 380,
											"end": 396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 380,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 380,
											"end": 396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 380,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 380,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 397,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 341,
											"end": 398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 405,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 405,
											"end": 456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 441,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 405,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 405,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 483,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 489,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 508,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 489,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 489,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 580,
											"end": 711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 580,
											"end": 711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 644,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 633,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 633,
											"end": 644,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 580,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 704,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 715,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 551,
											"end": 554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 544,
											"end": 578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 672,
											"end": 675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 801,
											"end": 805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 816,
											"end": 842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 816,
											"end": 842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1981,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2170,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2356,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0x3206be0d4303cdbed9a49d5d9e011196086aa5c963a40cf0f381c89a7e922801\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c5ae6c141d6ce4f0fe95d0e9b46ca1d0d1198ad9a7254966a110126b37b38a3\",\"dweb:/ipfs/QmY8phR8usBe3QY45uvviXmgWSnxKYNhVZtf1d4VtqmQZ8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinFlipSolution.sol": {
				"CoinFlipSolution": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "headsOrTails",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlipSolution.sol\":96:1028  contract CoinFlipSolution {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlipSolution.sol\":146:223  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlipSolution.sol\":129:223  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x00\n  sstore\n    /* \"contracts/CoinFlipSolution.sol\":261:352  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CoinFlipSolution.sol\":303:345  0x107EE1cF4ef17F73952451549c82B7d59AbC094c */\n  0x107ee1cf4ef17f73952451549c82b7d59abc094c\n    /* \"contracts/CoinFlipSolution.sol\":285:300  coinFlipAddress */\n  0x01\n  0x00\n    /* \"contracts/CoinFlipSolution.sol\":285:345  coinFlipAddress = 0x107EE1cF4ef17F73952451549c82B7d59AbC094c */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlipSolution.sol\":96:1028  contract CoinFlipSolution {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlipSolution.sol\":96:1028  contract CoinFlipSolution {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe290bc40\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlipSolution.sol\":572:1025  function headsOrTails() public returns (bool) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/CoinFlipSolution.sol\":612:616  bool */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":628:646  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinFlipSolution.sol\":682:683  1 */\n      0x01\n        /* \"contracts/CoinFlipSolution.sol\":667:679  block.number */\n      number\n        /* \"contracts/CoinFlipSolution.sol\":667:683  block.number - 1 */\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"contracts/CoinFlipSolution.sol\":657:684  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlipSolution.sol\":649:685  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlipSolution.sol\":628:685  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlipSolution.sol\":705:721  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":737:743  FACTOR */\n      dup1\n      sload\n        /* \"contracts/CoinFlipSolution.sol\":724:734  blockValue */\n      dup3\n        /* \"contracts/CoinFlipSolution.sol\":724:743  blockValue / FACTOR */\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"contracts/CoinFlipSolution.sol\":705:743  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlipSolution.sol\":753:762  bool side */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":777:778  1 */\n      0x01\n        /* \"contracts/CoinFlipSolution.sol\":765:773  coinFlip */\n      dup3\n        /* \"contracts/CoinFlipSolution.sol\":765:778  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlipSolution.sol\":765:793  coinFlip == 1 ? true : false */\n      tag_13\n      jumpi\n        /* \"contracts/CoinFlipSolution.sol\":788:793  false */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":765:793  coinFlip == 1 ? true : false */\n      jump(tag_14)\n    tag_13:\n        /* \"contracts/CoinFlipSolution.sol\":781:785  true */\n      0x01\n        /* \"contracts/CoinFlipSolution.sol\":765:793  coinFlip == 1 ? true : false */\n    tag_14:\n        /* \"contracts/CoinFlipSolution.sol\":753:793  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlipSolution.sol\":804:829  CoinFlip CoinFlipContract */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":841:856  coinFlipAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinFlipSolution.sol\":804:857  CoinFlip CoinFlipContract = CoinFlip(coinFlipAddress) */\n      swap1\n      pop\n        /* \"contracts/CoinFlipSolution.sol\":888:892  true */\n      0x01\n        /* \"contracts/CoinFlipSolution.sol\":880:892  side == true */\n      iszero\n      iszero\n        /* \"contracts/CoinFlipSolution.sol\":880:884  side */\n      dup3\n        /* \"contracts/CoinFlipSolution.sol\":880:892  side == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/CoinFlipSolution.sol\":876:1019  if (side == true) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/CoinFlipSolution.sol\":915:931  CoinFlipContract */\n      dup1\n        /* \"contracts/CoinFlipSolution.sol\":915:936  CoinFlipContract.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/CoinFlipSolution.sol\":937:941  true */\n      0x01\n        /* \"contracts/CoinFlipSolution.sol\":915:942  CoinFlipContract.flip(true) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/CoinFlipSolution.sol\":908:942  return CoinFlipContract.flip(true) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_8)\n        /* \"contracts/CoinFlipSolution.sol\":876:1019  if (side == true) {... */\n    tag_15:\n        /* \"contracts/CoinFlipSolution.sol\":980:996  CoinFlipContract */\n      dup1\n        /* \"contracts/CoinFlipSolution.sol\":980:1001  CoinFlipContract.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/CoinFlipSolution.sol\":1002:1007  false */\n      0x00\n        /* \"contracts/CoinFlipSolution.sol\":980:1008  CoinFlipContract.flip(false) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n        /* \"contracts/CoinFlipSolution.sol\":973:1008  return CoinFlipContract.flip(false) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlipSolution.sol\":572:1025  function headsOrTails() public returns (bool) {... */\n    tag_8:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_29:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_31\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:495   */\n    tag_21:\n        /* \"#utility.yul\":217:223   */\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:353   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":272:351   */\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":234:353   */\n    tag_34:\n        /* \"#utility.yul\":392:393   */\n      0x00\n        /* \"#utility.yul\":417:478   */\n      tag_37\n        /* \"#utility.yul\":470:477   */\n      dup5\n        /* \"#utility.yul\":461:467   */\n      dup3\n        /* \"#utility.yul\":450:459   */\n      dup6\n        /* \"#utility.yul\":446:468   */\n      add\n        /* \"#utility.yul\":417:478   */\n      tag_29\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":407:478   */\n      swap2\n      pop\n        /* \"#utility.yul\":363:488   */\n      pop\n        /* \"#utility.yul\":150:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":501:610   */\n    tag_38:\n        /* \"#utility.yul\":582:603   */\n      tag_40\n        /* \"#utility.yul\":597:602   */\n      dup2\n        /* \"#utility.yul\":582:603   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":577:580   */\n      dup3\n        /* \"#utility.yul\":570:604   */\n      mstore\n        /* \"#utility.yul\":501:610   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:826   */\n    tag_7:\n        /* \"#utility.yul\":703:707   */\n      0x00\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":730:739   */\n      dup3\n        /* \"#utility.yul\":726:744   */\n      add\n        /* \"#utility.yul\":718:744   */\n      swap1\n      pop\n        /* \"#utility.yul\":754:819   */\n      tag_43\n        /* \"#utility.yul\":816:817   */\n      0x00\n        /* \"#utility.yul\":805:814   */\n      dup4\n        /* \"#utility.yul\":801:818   */\n      add\n        /* \"#utility.yul\":792:798   */\n      dup5\n        /* \"#utility.yul\":754:819   */\n      tag_38\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":616:826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":913:1098   */\n    tag_12:\n        /* \"#utility.yul\":953:954   */\n      0x00\n        /* \"#utility.yul\":970:990   */\n      tag_47\n        /* \"#utility.yul\":988:989   */\n      dup3\n        /* \"#utility.yul\":970:990   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":965:990   */\n      swap2\n      pop\n        /* \"#utility.yul\":1004:1024   */\n      tag_49\n        /* \"#utility.yul\":1022:1023   */\n      dup4\n        /* \"#utility.yul\":1004:1024   */\n      tag_48\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":999:1024   */\n      swap3\n      pop\n        /* \"#utility.yul\":1043:1044   */\n      dup3\n        /* \"#utility.yul\":1033:1068   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1048:1066   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1033:1068   */\n    tag_50:\n        /* \"#utility.yul\":1090:1091   */\n      dup3\n        /* \"#utility.yul\":1087:1088   */\n      dup3\n        /* \"#utility.yul\":1083:1092   */\n      div\n        /* \"#utility.yul\":1078:1092   */\n      swap1\n      pop\n        /* \"#utility.yul\":913:1098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1104:1295   */\n    tag_10:\n        /* \"#utility.yul\":1144:1148   */\n      0x00\n        /* \"#utility.yul\":1164:1184   */\n      tag_54\n        /* \"#utility.yul\":1182:1183   */\n      dup3\n        /* \"#utility.yul\":1164:1184   */\n      tag_48\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1159:1184   */\n      swap2\n      pop\n        /* \"#utility.yul\":1198:1218   */\n      tag_55\n        /* \"#utility.yul\":1216:1217   */\n      dup4\n        /* \"#utility.yul\":1198:1218   */\n      tag_48\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1193:1218   */\n      swap3\n      pop\n        /* \"#utility.yul\":1237:1238   */\n      dup3\n        /* \"#utility.yul\":1234:1235   */\n      dup3\n        /* \"#utility.yul\":1231:1239   */\n      lt\n        /* \"#utility.yul\":1228:1262   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1242:1260   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1228:1262   */\n    tag_56:\n        /* \"#utility.yul\":1287:1288   */\n      dup3\n        /* \"#utility.yul\":1284:1285   */\n      dup3\n        /* \"#utility.yul\":1280:1289   */\n      sub\n        /* \"#utility.yul\":1272:1289   */\n      swap1\n      pop\n        /* \"#utility.yul\":1104:1295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1301:1391   */\n    tag_41:\n        /* \"#utility.yul\":1335:1342   */\n      0x00\n        /* \"#utility.yul\":1378:1383   */\n      dup2\n        /* \"#utility.yul\":1371:1384   */\n      iszero\n        /* \"#utility.yul\":1364:1385   */\n      iszero\n        /* \"#utility.yul\":1353:1385   */\n      swap1\n      pop\n        /* \"#utility.yul\":1301:1391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1397:1474   */\n    tag_48:\n        /* \"#utility.yul\":1434:1441   */\n      0x00\n        /* \"#utility.yul\":1463:1468   */\n      dup2\n        /* \"#utility.yul\":1452:1468   */\n      swap1\n      pop\n        /* \"#utility.yul\":1397:1474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1480:1660   */\n    tag_58:\n        /* \"#utility.yul\":1528:1605   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1525:1526   */\n      0x00\n        /* \"#utility.yul\":1518:1606   */\n      mstore\n        /* \"#utility.yul\":1625:1629   */\n      0x11\n        /* \"#utility.yul\":1622:1623   */\n      0x04\n        /* \"#utility.yul\":1615:1630   */\n      mstore\n        /* \"#utility.yul\":1649:1653   */\n      0x24\n        /* \"#utility.yul\":1646:1647   */\n      0x00\n        /* \"#utility.yul\":1639:1654   */\n      revert\n        /* \"#utility.yul\":1666:1846   */\n    tag_52:\n        /* \"#utility.yul\":1714:1791   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1711:1712   */\n      0x00\n        /* \"#utility.yul\":1704:1792   */\n      mstore\n        /* \"#utility.yul\":1811:1815   */\n      0x12\n        /* \"#utility.yul\":1808:1809   */\n      0x04\n        /* \"#utility.yul\":1801:1816   */\n      mstore\n        /* \"#utility.yul\":1835:1839   */\n      0x24\n        /* \"#utility.yul\":1832:1833   */\n      0x00\n        /* \"#utility.yul\":1825:1840   */\n      revert\n        /* \"#utility.yul\":1975:2092   */\n    tag_36:\n        /* \"#utility.yul\":2084:2085   */\n      0x00\n        /* \"#utility.yul\":2081:2082   */\n      dup1\n        /* \"#utility.yul\":2074:2086   */\n      revert\n        /* \"#utility.yul\":2098:2214   */\n    tag_32:\n        /* \"#utility.yul\":2168:2189   */\n      tag_67\n        /* \"#utility.yul\":2183:2188   */\n      dup2\n        /* \"#utility.yul\":2168:2189   */\n      tag_41\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2161:2166   */\n      dup2\n        /* \"#utility.yul\":2158:2190   */\n      eq\n        /* \"#utility.yul\":2148:2208   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      dup1\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2148:2208   */\n    tag_68:\n        /* \"#utility.yul\":2098:2214   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122091d77694655ab55f42b59379227b3119847ae207e83ac2715e059f817a539fed64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_97": {
									"entryPoint": null,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060005534801561003457600080fd5b5073107ee1cf4ef17f73952451549c82b7d59abc094c600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610383806100996000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e290bc4014610030575b600080fd5b61003861004e565b604051610045919061023d565b60405180910390f35b60008060014361005e9190610289565b4060001c905060008054826100739190610258565b9050600060018214610086576000610089565b60015b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115158215151415610156578073ffffffffffffffffffffffffffffffffffffffff16631d263f6760016040518263ffffffff1660e01b81526004016100f9919061023d565b602060405180830381600087803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014b9190610201565b9450505050506101e9565b8073ffffffffffffffffffffffffffffffffffffffff16631d263f6760006040518263ffffffff1660e01b8152600401610190919061023d565b602060405180830381600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e29190610201565b9450505050505b90565b6000815190506101fb81610336565b92915050565b60006020828403121561021757610216610331565b5b6000610225848285016101ec565b91505092915050565b610237816102bd565b82525050565b6000602082019050610252600083018461022e565b92915050565b6000610263826102c9565b915061026e836102c9565b92508261027e5761027d610302565b5b828204905092915050565b6000610294826102c9565b915061029f836102c9565b9250828210156102b2576102b16102d3565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61033f816102bd565b811461034a57600080fd5b5056fea264697066735822122091d77694655ab55f42b59379227b3119847ae207e83ac2715e059f817a539fed64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x107EE1CF4EF17F73952451549C82B7D59ABC094C PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x383 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE290BC40 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x5E SWAP2 SWAP1 PUSH2 0x289 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x86 JUMPI PUSH1 0x0 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x156 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x1E9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI PUSH2 0x216 PUSH2 0x331 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x237 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x252 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 DUP3 PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E DUP4 PUSH2 0x2C9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x302 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP3 PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F DUP4 PUSH2 0x2C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x2D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33F DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xD7 PUSH23 0x94655AB55F42B59379227B3119847AE207E83AC2715E05 SWAP16 DUP2 PUSH27 0x539FED64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "96:932:1:-:0;;;146:77;129:94;;261:91;;;;;;;;;;303:42;285:15;;:60;;;;;;;;;;;;;;;;;;96:932;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@headsOrTails_153": {
									"entryPoint": 78,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2217:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "272:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:2"
															},
															"nodeType": "YulIf",
															"src": "234:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "363:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "378:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "382:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "407:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "450:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "461:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "470:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "417:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "417:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "407:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:2",
														"type": ""
													}
												],
												"src": "150:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "597:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "582:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:2",
														"type": ""
													}
												],
												"src": "501:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "718:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "730:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "741:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "718:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "792:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "816:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "801:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "754:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "754:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "680:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "692:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "703:4:2",
														"type": ""
													}
												],
												"src": "616:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "898:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "892:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "865:6:2",
														"type": ""
													}
												],
												"src": "832:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "955:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "965:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "988:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "970:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "965:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "999:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1022:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1004:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "999:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1046:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1048:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1048:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1048:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1043:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:9:2"
															},
															"nodeType": "YulIf",
															"src": "1033:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1078:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1087:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1090:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1083:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1078:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "944:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "947:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "953:1:2",
														"type": ""
													}
												],
												"src": "913:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1149:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1159:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1182:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1164:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1159:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1193:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1216:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1198:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1193:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1240:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1242:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1242:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1242:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1234:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1237:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:8:2"
															},
															"nodeType": "YulIf",
															"src": "1228:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1272:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1284:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1287:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1280:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1272:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1135:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1138:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1144:4:2",
														"type": ""
													}
												],
												"src": "1104:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1378:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1371:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:2",
														"type": ""
													}
												],
												"src": "1301:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1442:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1452:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1463:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1452:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1424:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1434:7:2",
														"type": ""
													}
												],
												"src": "1397:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1525:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1528:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1518:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1625:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1615:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1639:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1480:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1711:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1801:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1832:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1835:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1666:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1941:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1951:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1951:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1852:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2064:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2074:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2074:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1975:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2192:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2204:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2194:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2194:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2161:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2168:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2168:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2158:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:40:2"
															},
															"nodeType": "YulIf",
															"src": "2148:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2131:5:2",
														"type": ""
													}
												],
												"src": "2098:116:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e290bc4014610030575b600080fd5b61003861004e565b604051610045919061023d565b60405180910390f35b60008060014361005e9190610289565b4060001c905060008054826100739190610258565b9050600060018214610086576000610089565b60015b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115158215151415610156578073ffffffffffffffffffffffffffffffffffffffff16631d263f6760016040518263ffffffff1660e01b81526004016100f9919061023d565b602060405180830381600087803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014b9190610201565b9450505050506101e9565b8073ffffffffffffffffffffffffffffffffffffffff16631d263f6760006040518263ffffffff1660e01b8152600401610190919061023d565b602060405180830381600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e29190610201565b9450505050505b90565b6000815190506101fb81610336565b92915050565b60006020828403121561021757610216610331565b5b6000610225848285016101ec565b91505092915050565b610237816102bd565b82525050565b6000602082019050610252600083018461022e565b92915050565b6000610263826102c9565b915061026e836102c9565b92508261027e5761027d610302565b5b828204905092915050565b6000610294826102c9565b915061029f836102c9565b9250828210156102b2576102b16102d3565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61033f816102bd565b811461034a57600080fd5b5056fea264697066735822122091d77694655ab55f42b59379227b3119847ae207e83ac2715e059f817a539fed64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE290BC40 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x5E SWAP2 SWAP1 PUSH2 0x289 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP1 SLOAD DUP3 PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x86 JUMPI PUSH1 0x0 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x156 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x1E9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x336 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI PUSH2 0x216 PUSH2 0x331 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x237 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x252 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263 DUP3 PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E DUP4 PUSH2 0x2C9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x302 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP3 PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F DUP4 PUSH2 0x2C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x2D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33F DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xD7 PUSH23 0x94655AB55F42B59379227B3119847AE207E83AC2715E05 SWAP16 DUP2 PUSH27 0x539FED64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "96:932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:453;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;612:4;628:18;682:1;667:12;:16;;;;:::i;:::-;657:27;649:36;;628:57;;705:16;737:6;;724:10;:19;;;;:::i;:::-;705:38;;753:9;777:1;765:8;:13;:28;;788:5;765:28;;;781:4;765:28;753:40;;804:25;841:15;;;;;;;;;;;804:53;;888:4;880:12;;:4;:12;;;876:143;;;915:16;:21;;;937:4;915:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;908:34;;;;;;;;876:143;980:16;:21;;;1002:5;980:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;973:35;;;;;;572:453;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:119;;;272:79;;:::i;:::-;234:119;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;150:345;;;;:::o;501:109::-;582:21;597:5;582:21;:::i;:::-;577:3;570:34;501:109;;:::o;616:210::-;703:4;741:2;730:9;726:18;718:26;;754:65;816:1;805:9;801:17;792:6;754:65;:::i;:::-;616:210;;;;:::o;913:185::-;953:1;970:20;988:1;970:20;:::i;:::-;965:25;;1004:20;1022:1;1004:20;:::i;:::-;999:25;;1043:1;1033:35;;1048:18;;:::i;:::-;1033:35;1090:1;1087;1083:9;1078:14;;913:185;;;;:::o;1104:191::-;1144:4;1164:20;1182:1;1164:20;:::i;:::-;1159:25;;1198:20;1216:1;1198:20;:::i;:::-;1193:25;;1237:1;1234;1231:8;1228:34;;;1242:18;;:::i;:::-;1228:34;1287:1;1284;1280:9;1272:17;;1104:191;;;;:::o;1301:90::-;1335:7;1378:5;1371:13;1364:21;1353:32;;1301:90;;;:::o;1397:77::-;1434:7;1463:5;1452:16;;1397:77;;;:::o;1480:180::-;1528:77;1525:1;1518:88;1625:4;1622:1;1615:15;1649:4;1646:1;1639:15;1666:180;1714:77;1711:1;1704:88;1811:4;1808:1;1801:15;1835:4;1832:1;1825:15;1975:117;2084:1;2081;2074:12;2098:116;2168:21;2183:5;2168:21;:::i;:::-;2161:5;2158:32;2148:60;;2204:1;2201;2194:12;2148:60;2098:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "179800",
								"executionCost": "46599",
								"totalCost": "226399"
							},
							"external": {
								"headsOrTails()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 223,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 223,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 352,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 352,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 261,
									"end": 352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "107EE1CF4EF17F73952451549C82B7D59ABC094C"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 285,
									"end": 345,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 285,
									"end": 345,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 285,
									"end": 345,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 285,
									"end": 345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 1028,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091d77694655ab55f42b59379227b3119847ae207e83ac2715e059f817a539fed64736f6c63430008070033",
									".code": [
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "E290BC40"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 1028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 612,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 667,
											"end": 679,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 667,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 667,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 667,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 667,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 667,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 657,
											"end": 684,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 649,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 685,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 628,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 705,
											"end": 721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 724,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 724,
											"end": 743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 743,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 743,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 724,
											"end": 743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 705,
											"end": 743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 753,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 778,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 765,
											"end": 778,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 788,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 753,
											"end": 793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 841,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 841,
											"end": 856,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 841,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 804,
											"end": 857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 804,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 880,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 880,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 876,
											"end": 1019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 915,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 937,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 908,
											"end": 942,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 876,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 980,
											"end": 996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1001,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1001,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 1002,
											"end": 1007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1025,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 272,
											"end": 351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 234,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 234,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 470,
											"end": 477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 461,
											"end": 467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 446,
											"end": 468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 417,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 417,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 407,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 610,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 501,
											"end": 610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 582,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 570,
											"end": 604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 501,
											"end": 610,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 616,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 703,
											"end": 707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 718,
											"end": 744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 718,
											"end": 744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 816,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 801,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 754,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 754,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 754,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 826,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 616,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 953,
											"end": 954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 970,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1033,
											"end": 1068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1033,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1092,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1098,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1239,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1295,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1384,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1474,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1480,
											"end": 1660,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1480,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1622,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1846,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1666,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1711,
											"end": 1712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1811,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1975,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2086,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2214,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2098,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2168,
											"end": 2189,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2168,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2190,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2148,
											"end": 2208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2208,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2148,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2214,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"headsOrTails()": "e290bc40"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"headsOrTails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlipSolution.sol\":\"CoinFlipSolution\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0x3206be0d4303cdbed9a49d5d9e011196086aa5c963a40cf0f381c89a7e922801\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c5ae6c141d6ce4f0fe95d0e9b46ca1d0d1198ad9a7254966a110126b37b38a3\",\"dweb:/ipfs/QmY8phR8usBe3QY45uvviXmgWSnxKYNhVZtf1d4VtqmQZ8\"]},\"contracts/CoinFlipSolution.sol\":{\"keccak256\":\"0x83c3c852f703239934767f852224e1d36971bb300df8f0daa02d6a9860835c03\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4c15b8a186f96798d1c89137f3b5bc40c86280a82861882685ff09d5595f29e4\",\"dweb:/ipfs/QmQfeUYk4Gy5b8fPJX6iYFPqdNbiiE9MZgHUUUYj9QVeLc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "contracts/CoinFlipSolution.sol:CoinFlipSolution",
								"label": "FACTOR",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "contracts/CoinFlipSolution.sol:CoinFlipSolution",
								"label": "coinFlipAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "71:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "100:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "85:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "127:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "119:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "119:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "147:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "139:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "139:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "156:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "252:30:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "258:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "258:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:0:0"
									},
									"scope": 81,
									"src": "238:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "335:380:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "349:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "341:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "380:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "380:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "395:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "380:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "370:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "370:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "362:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "341:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "409:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "405:51:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "433:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "441:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "441:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "441:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "462:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "462:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "462:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "497:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "489:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "508:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "521:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "508:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "489:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "538:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "533:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "533:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "545:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "557:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "545:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "545:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "561:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "584:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "592:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "584:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "657:54:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "665:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "683:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "665:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "665:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "692:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "580:131:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "600:51:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "608:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "608:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "608:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "640:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "633:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "295:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "305:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "300:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "329:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:6:0"
									},
									"scope": 81,
									"src": "286:429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "62:655:0",
							"usedErrors": []
						}
					],
					"src": "37:680:0"
				},
				"id": 0
			},
			"contracts/CoinFlipSolution.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlipSolution.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"CoinFlipSolution": [
							154
						]
					},
					"id": 155,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "contracts/CoinFlip.sol",
							"file": "./CoinFlip.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 155,
							"sourceUnit": 82,
							"src": "70:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "CoinFlipSolution",
							"nameLocation": "105:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "137:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "129:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "129:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "146:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "coinFlipAddress",
									"nameLocation": "237:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "229:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "229:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "275:77:1",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "coinFlipAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "285:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831303745453163463465663137463733393532343531353439633832423764353941624330393463",
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "303:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x107EE1cF4ef17F73952451549c82B7d59AbC094c"
													},
													"src": "285:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "285:60:1"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:1"
									},
									"scope": 154,
									"src": "261:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "618:407:1",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "636:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "628:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "628:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 107,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "667:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "667:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "682:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "667:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 106,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "657:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "657:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "649:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "649:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "628:57:1"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "713:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "705:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "705:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 116,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "724:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 117,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "724:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "705:38:1"
											},
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "758:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "753:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "753:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 122,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "765:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "765:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "788:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "765:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "753:40:1"
											},
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "CoinFlipContract",
														"nameLocation": "813:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "804:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														},
														"typeName": {
															"id": 130,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 129,
																"name": "CoinFlip",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 81,
																"src": "804:8:1"
															},
															"referencedDeclaration": 81,
															"src": "804:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"arguments": [
														{
															"id": 133,
															"name": "coinFlipAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "841:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"name": "CoinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
															"typeString": "type(contract CoinFlip)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "832:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "804:53:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "880:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "880:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 150,
													"nodeType": "Block",
													"src": "959:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1002:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 145,
																		"name": "CoinFlipContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "980:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$81",
																			"typeString": "contract CoinFlip"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "flip",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 80,
																	"src": "980:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) external returns (bool)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "980:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 101,
															"id": 149,
															"nodeType": "Return",
															"src": "973:35:1"
														}
													]
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "876:143:1",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "894:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "74727565",
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "937:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 139,
																		"name": "CoinFlipContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "915:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$81",
																			"typeString": "contract CoinFlip"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "flip",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 80,
																	"src": "915:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) external returns (bool)"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "915:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 101,
															"id": 143,
															"nodeType": "Return",
															"src": "908:34:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e290bc40",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "headsOrTails",
									"nameLocation": "581:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "612:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "612:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:6:1"
									},
									"scope": 154,
									"src": "572:453:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 155,
							"src": "96:932:1",
							"usedErrors": []
						}
					],
					"src": "37:991:1"
				},
				"id": 1
			}
		}
	}
}